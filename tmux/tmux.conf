###############################################################
# => general
###############################################################
# set default shell
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l zsh"

# set window split
unbind v
bind v split-window -h -c "#{pane_current_path}"

unbind s
bind s split-window -v -c "#{pane_current_path}"

# move window left/right
bind-key -n C-S-left swap-window -t -1
bind-key -n C-S-right swap-window -t +1

set -g status-interval 1
set -g status-justify left

# C-b is not acceptable -- Vim uses it
set -g prefix C-space
bind-key C-space last-window

# Start numbering at 1
set -g base-index 1

# Renumber
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
setw -g mode-keys vi
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

unbind c
bind c new-window -c "#{pane_current_path}"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
setw -g automatic-rename

# color
set -g default-terminal "xterm-256color"

# history limit
set-option -g history-limit 1000000

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.
set -g mouse on

###############################################################
# => base16-oceanicnext color
###############################################################
set -g status "on"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

set -g status-bg "colour18"

set -g status-left "#[fg=colour20,bg=colour19] #S #[fg=colour19,bg=colour18]"
set -g status-right "#[fg=colour19,bg=colour18]#[fg=colour20,bg=colour19] #h "

set -g pane-active-border-fg "colour19"
set -g pane-border-fg "colour21"

set -g message-fg "colour18"
set -g message-bg "colour20"
set -g message-command-fg "colour18"
set -g message-command-bg "colour20"

setw -g window-status-fg "colour20"
setw -g window-status-bg "colour18"
setw -g window-status-separator " "

setw -g window-status-activity-fg "colour05"
setw -g window-status-activity-bg "colour18"

setw -g window-status-format "#[fg=colour20]#I: #(echo $(basename #{pane_current_path}))>#{pane_current_command}"
setw -g window-status-current-format "#[fg=colour01]#I: #(echo $(basename #{pane_current_path}))>#{pane_current_command}"

###############################################################
# => vim-tmux-navigator
###############################################################
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
