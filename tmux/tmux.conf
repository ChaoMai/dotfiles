###############################################################
# => general
###############################################################
# set default shell
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l zsh"

# C-b is not acceptable -- Vim uses it
set -g prefix C-space
bind-key C-space last-window

# set window split
unbind v
bind v split-window -h -c "#{pane_current_path}"

unbind s
bind s split-window -v -c "#{pane_current_path}"

# move window left/right
bind < swap-window -t -1
bind > swap-window -t +1

set -g status-interval 1
set -g status-justify left

# Start numbering at 1
set -g base-index 1

# Renumber
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

unbind c
bind c new-window -c "#{pane_current_path}"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
setw -g automatic-rename

# color
set -g default-terminal "xterm-256color-italic"

# history limit
# set-option -g history-limit 500

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.
set -g mouse off

###############################################################
# => gruvbox color
###############################################################
# COLORSCHEME: gruvbox dark
# set-option -g status "on"

# default statusbar colors
# set-option -g status-bg colour237 #bg1
# set-option -g status-fg colour223 #fg1

# default window title colors
# set-window-option -g window-status-bg colour214 #yellow
# set-window-option -g window-status-fg colour237 #bg1

# set-window-option -g window-status-activity-bg colour237 #bg1
# set-window-option -g window-status-activity-fg colour248 #fg3

# active window title colors
# set-window-option -g window-status-current-bg default
# set-window-option -g window-status-current-fg colour237 #bg1

# pane border
# set-option -g pane-active-border-fg colour250 #fg2
# set-option -g pane-border-fg colour237 #bg1

# message infos
# set-option -g message-bg colour239 #bg2
# set-option -g message-fg colour223 #fg1

# writting commands inactive
# set-option -g message-command-bg colour239 #fg3
# set-option -g message-command-fg colour223 #bg1

# pane number display
# set-option -g display-panes-active-colour colour250 #fg2
# set-option -g display-panes-colour colour237 #bg1

# clock
# set-window-option -g clock-mode-colour colour109 #blue

# bell
# set-window-option -g window-status-bell-style fg=colour235,bg=colour167 #bg, red

# Theme settings mixed with colors (unfortunately, but there is no cleaner way)
# set-option -g status-attr "none"
# set-option -g status-justify "left"
# set-option -g status-left-attr "none"
# set-option -g status-left-length "80"
# set-option -g status-right-attr "none"
# set-option -g status-right-length "80"
# set-window-option -g window-status-activity-attr "none"
# set-window-option -g window-status-attr "none"
# set-window-option -g window-status-separator ""

# set -g status-left "#[fg=colour248, bg=colour241]#S#[fg=colour241, bg=colour237, nobold, noitalics, nounderscore]"
# set -g status-right "#[fg=colour248, bg=colour239, nobold, noitalics, nounderscore]#[fg=colour237, bg=colour248] #h"

# set -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour223,bg=colour239]#I.#(echo $(basename #{pane_current_path})):#{pane_current_command}#[fg=colour239, bg=colour237, noitalics]"
# set -g window-status-current-format "#[fg=colour239, bg=colour248, :nobold, noitalics, nounderscore]#[fg=colour239, bg=colour214]#I.#(echo $(basename #{pane_current_path})):#{pane_current_command}#[fg=colour214, bg=colour237, nobold, noitalics, nounderscore]"


###############################################################
# => base16-oceanicnext color
###############################################################
set -g status "on"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

set -g status-bg "colour18"

set -g status-left "#[fg=colour20,bg=colour19]#S#[fg=colour19,bg=colour18]>"
set -g status-right "#[fg=colour19,bg=colour18]#[fg=colour20,bg=colour19] #h"

set -g pane-active-border-fg "colour19"
set -g pane-border-fg "colour21"

set -g message-fg "colour07"
set -g message-bg "colour19"
set -g message-command-fg "colour07"
set -g message-command-bg "colour19"

setw -g window-status-fg "colour20"
setw -g window-status-bg "colour18"

setw -g window-status-activity-fg "colour05"
setw -g window-status-activity-bg "colour19"

setw -g window-status-format "#[fg=colour20,bg=colour18]|#I.#(echo $(basename #{pane_current_path})):#{pane_current_command}"
setw -g window-status-current-format "#[fg=colour20,bg=colour18]|#[fg=colour01,bg=colour00]#I.#(echo $(basename #{pane_current_path})):#{pane_current_command}"

###############################################################
# => nord color
###############################################################

# #+---------+
# #+ Options +
# #+---------+
# # set -g status-interval 1
# # set -g status on
# 
# #+--------+
# #+ Status +
# #+--------+
# #+--- Layout ---+
# set -g status-justify left
# 
# #+--- Colors ---+
# set -g status-bg black
# set -g status-fg white
# set -g status-attr none
# 
# #+-------+
# #+ Panes +
# #+-------+
# set -g pane-border-bg black
# set -g pane-border-fg black
# set -g pane-active-border-bg black
# set -g pane-active-border-fg brightblack
# set -g display-panes-colour black
# set -g display-panes-active-colour brightblack
# 
# #+------------+
# #+ Clock Mode +
# #+------------+
# setw -g clock-mode-colour cyan
# 
# #+----------+
# #+ Messages +
# #+---------+
# set -g message-fg cyan
# set -g message-bg brightblack
# set -g message-command-fg cyan
# set -g message-command-bg brightblack
# 
# #+--------+
# #+ Status +
# #+--------+
# #+--- Bars ---+
# set -g status-left "#[fg=black,bg=blue,bold] #S "
# set -g status-right "#{prefix_highlight}#[fg=white,bg=brightblack] %Y-%m-%d #[fg=white,bg=brightblack,nobold,noitalics,nounderscore]|#[fg=white,bg=brightblack] %H:%M #[fg=cyan,bg=brightblack,nobold,noitalics,nounderscore] #[fg=black,bg=cyan,bold] #H "
# set -g status-left "#[fg=black,bg=blue,bold]#S#[fg=black,bg=blue,bold]"
# set -g status-right "#[fg=white,bg=brightblack]#[fg=white,bg=brightblack] #h"
# 
# #+--- Windows ---+
# set -g window-status-format "#[fg=white,bg=brightblack]|#I.#(echo $(basename #{pane_current_path})):#{pane_current_command}"
# set -g window-status-current-format "#[fg=black,bg=cyan]|#[fg=black,bg=cyan]#I.#(echo $(basename #{pane_current_path})):#{pane_current_command}"
# set -g window-status-separator ""

###############################################################
# => vim-tmux-navigator
###############################################################
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
