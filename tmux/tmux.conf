###############################################################
# => general
###############################################################
# set default shell
set -g default-shell $SHELL

# set window split
bind-key v split-window -h
bind-key b split-window

set -g status-interval 1
set -g status-justify centre # center align window list

# C-b is not acceptable -- Vim uses it
set -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Renumber
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
setw -g automatic-rename

# color
set -g default-terminal "xterm-256color"

# history limit
set-option -g history-limit 1000000

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.

set -g mouse off

unbind c
bind c new-window -c "#{pane_current_path}"

unbind b
bind b split-window -h -c "#{pane_current_path}"

unbind v
bind v split-window -v -c "#{pane_current_path}"


###############################################################
# => gruvbox color
###############################################################
set -g status "on"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g status-attr "none"
set -g status-left-attr "none"
set -g pane-active-border-fg "colour248"
set -g pane-border-fg "colour238"
set -g status-bg "colour237"
set -g message-fg "colour237"
set -g message-bg "colour248"
set -g message-command-fg "colour237"
set -g message-command-bg "colour248"
setw -g window-status-fg "colour237"
setw -g window-status-bg "colour214"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour237"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour248"
setw -g window-status-separator ""

# set -g status-left "#[fg=colour248,bg=colour241] #S #[fg=colour241,bg=colour237,nobold,nounderscore,noitalics]"
# set -g status-right "#[fg=colour239,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour246,bg=colour239] %Y-%m-%d  %H:%M #[fg=colour248,bg=colour239,nobold,nounderscore,noitalics]#[fg=colour237,bg=colour248] #h "
# setw -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour223,bg=colour239] #I #[fg=colour223,bg=colour239] #(echo $(basename #{pane_current_path}))>#{pane_current_command} #[fg=colour239,bg=colour237,noitalics]"
# setw -g window-status-current-format "#[fg=colour239,bg=colour248,:nobold,nounderscore,noitalics]#[fg=colour239,bg=colour214] #I #[fg=colour239,bg=colour214,bold] #(echo $(basename #{pane_current_path}))>#{pane_current_command} #[fg=colour214,bg=colour237,nobold,nounderscore,noitalics]"

set -g status-left "#[fg=colour248,bg=colour241] #S #[fg=colour241,bg=colour237,nobold,nounderscore,noitalics]>"
set -g status-right "#[fg=colour239,bg=colour237,nobold,nounderscore,noitalics]<#[fg=colour246,bg=colour239] %Y-%m-%d < %H:%M #[fg=colour248,bg=colour239,nobold,nounderscore,noitalics]<#[fg=colour237,bg=colour248] #h "
setw -g window-status-format "#[fg=colour237,bg=colour239,noitalics]>#[fg=colour223,bg=colour239] #I >#[fg=colour223,bg=colour239] #(echo $(basename #{pane_current_path}))>#{pane_current_command} #[fg=colour239,bg=colour237,noitalics]>"
setw -g window-status-current-format "#[fg=colour239,bg=colour248,:nobold,nounderscore,noitalics]>#[fg=colour239,bg=colour214] #I >#[fg=colour239,bg=colour214,bold] #(echo $(basename #{pane_current_path}))>#{pane_current_command} #[fg=colour214,bg=colour237,nobold,nounderscore,noitalics]>"

###############################################################
# => vim-tmux-navigator
###############################################################
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
